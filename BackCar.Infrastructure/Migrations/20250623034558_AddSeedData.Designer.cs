// <auto-generated />
using System;
using BackCar.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackCar.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250623034558_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BackCar._Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id_Categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Categoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Categoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Cliente"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.ContratoRenta", b =>
                {
                    b.Property<int>("Id_ContratoRenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_ContratoRenta"));

                    b.Property<int>("Clientes_id")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoSubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Vehiculos_id")
                        .HasColumnType("int");

                    b.HasKey("Id_ContratoRenta");

                    b.HasIndex("Clientes_id");

                    b.HasIndex("Vehiculos_id");

                    b.ToTable("ContratosRenta");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Incidente", b =>
                {
                    b.Property<int>("Id_Incidente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Incidente"));

                    b.Property<bool>("AplicoSeguro")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaIncidente")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_ContratoRenta")
                        .HasColumnType("int");

                    b.Property<int>("Id_Vehiculo")
                        .HasColumnType("int");

                    b.HasKey("Id_Incidente");

                    b.HasIndex("Id_ContratoRenta");

                    b.HasIndex("Id_Vehiculo");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Mantenimiento", b =>
                {
                    b.Property<int>("Id_Mantenimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Mantenimiento"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Vehiculo_id")
                        .HasColumnType("int");

                    b.HasKey("Id_Mantenimiento");

                    b.HasIndex("Vehiculo_id");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.RegistroEstadoVehiculo", b =>
                {
                    b.Property<int>("Id_RegistroEstadoVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_RegistroEstadoVehiculo"));

                    b.Property<bool>("AplicanCargos")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DetallesRetorno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_ContratoRenta")
                        .HasColumnType("int");

                    b.Property<int>("KilometrajeFinal")
                        .HasColumnType("int");

                    b.Property<int>("KilometrajeInicial")
                        .HasColumnType("int");

                    b.HasKey("Id_RegistroEstadoVehiculo");

                    b.HasIndex("Id_ContratoRenta");

                    b.ToTable("RegistroEstadoVehiculo");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Rol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Rol");

                    b.ToTable("Roles_Usuario");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Seguro", b =>
                {
                    b.Property<int>("Id_Seguro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Seguro"));

                    b.Property<string>("AutorContratado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TipoSeguro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Seguro");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Roles_Usuarios_id")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Usuario");

                    b.HasIndex("Roles_Usuarios_id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id_Vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Vehiculo"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int?>("Categoria_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoTemporadaAlta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CostoTemporadaBaja")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAutomatico")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMantenimiento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRentado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Usuarios_id")
                        .HasColumnType("int");

                    b.HasKey("Id_Vehiculo");

                    b.HasIndex("Categoria_Id");

                    b.HasIndex("Usuarios_id");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.VehiculoSeguro", b =>
                {
                    b.Property<int>("Id_VehiculoSeguro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_VehiculoSeguro"));

                    b.Property<int>("Seguros_id")
                        .HasColumnType("int");

                    b.Property<int>("Vehiculos_id")
                        .HasColumnType("int");

                    b.HasKey("Id_VehiculoSeguro");

                    b.HasIndex("Seguros_id");

                    b.HasIndex("Vehiculos_id");

                    b.ToTable("Vehiculos_Seguros");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.ContratoRenta", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("Clientes_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackCar._Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Vehiculos_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Incidente", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.ContratoRenta", "ContratoRenta")
                        .WithMany()
                        .HasForeignKey("Id_ContratoRenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackCar._Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Id_Vehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoRenta");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Mantenimiento", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Vehiculo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.RegistroEstadoVehiculo", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.ContratoRenta", "ContratoRenta")
                        .WithMany()
                        .HasForeignKey("Id_ContratoRenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoRenta");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Usuario", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("Roles_Usuarios_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Vehiculo", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("Categoria_Id");

                    b.HasOne("BackCar._Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usuarios_id");

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.VehiculoSeguro", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("Seguros_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackCar._Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Vehiculos_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seguro");

                    b.Navigation("Vehiculo");
                });
#pragma warning restore 612, 618
        }
    }
}

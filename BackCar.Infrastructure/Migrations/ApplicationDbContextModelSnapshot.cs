// <auto-generated />
using System;
using BackCar.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackCar.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BackCar._Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id_Categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Categoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Categoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id_Categoria = 1,
                            Nombre = "SUV"
                        },
                        new
                        {
                            Id_Categoria = 2,
                            Nombre = "Sedán"
                        },
                        new
                        {
                            Id_Categoria = 3,
                            Nombre = "Camioneta"
                        },
                        new
                        {
                            Id_Categoria = 4,
                            Nombre = "Deportivo"
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Cliente"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Cliente");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id_Cliente = 1,
                            Correo = "cliente1@gmail.com",
                            NombreCliente = "Juan Perez",
                            Telefono = "1234567890"
                        },
                        new
                        {
                            Id_Cliente = 2,
                            Correo = "cliente2@gmail.com",
                            NombreCliente = "Diego Aleman",
                            Telefono = "1234567890"
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.ContratoRenta", b =>
                {
                    b.Property<int>("Id_ContratoRenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_ContratoRenta"));

                    b.Property<int>("Clientes_id")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoSubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Vehiculos_id")
                        .HasColumnType("int");

                    b.HasKey("Id_ContratoRenta");

                    b.HasIndex("Clientes_id");

                    b.HasIndex("Vehiculos_id");

                    b.ToTable("ContratosRenta");

                    b.HasData(
                        new
                        {
                            Id_ContratoRenta = 1,
                            Clientes_id = 1,
                            CostoSubTotal = 300.00m,
                            CostoTotal = 350.00m,
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaDevolucion = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vehiculos_id = 1
                        },
                        new
                        {
                            Id_ContratoRenta = 2,
                            Clientes_id = 2,
                            CostoSubTotal = 180.00m,
                            CostoTotal = 200.00m,
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaDevolucion = new DateTime(2025, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Vehiculos_id = 2
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Incidente", b =>
                {
                    b.Property<int>("Id_Incidente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Incidente"));

                    b.Property<bool>("AplicoSeguro")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaIncidente")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_ContratoRenta")
                        .HasColumnType("int");

                    b.Property<int>("Id_Vehiculo")
                        .HasColumnType("int");

                    b.HasKey("Id_Incidente");

                    b.HasIndex("Id_ContratoRenta");

                    b.HasIndex("Id_Vehiculo");

                    b.ToTable("Incidentes");

                    b.HasData(
                        new
                        {
                            Id_Incidente = 1,
                            AplicoSeguro = false,
                            Descripcion = "Rasguño en la puerta",
                            FechaIncidente = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id_ContratoRenta = 1,
                            Id_Vehiculo = 1
                        },
                        new
                        {
                            Id_Incidente = 2,
                            AplicoSeguro = false,
                            Descripcion = "Vidrio roto y puertas rayadas",
                            FechaIncidente = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id_ContratoRenta = 2,
                            Id_Vehiculo = 2
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Mantenimiento", b =>
                {
                    b.Property<int>("Id_Mantenimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Mantenimiento"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Vehiculo_id")
                        .HasColumnType("int");

                    b.HasKey("Id_Mantenimiento");

                    b.HasIndex("Vehiculo_id");

                    b.ToTable("Mantenimientos");

                    b.HasData(
                        new
                        {
                            Id_Mantenimiento = 1,
                            Costo = 50.00m,
                            Detalles = "Cambio de aceite",
                            Fecha = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tipo = "mecánico",
                            Vehiculo_id = 1
                        },
                        new
                        {
                            Id_Mantenimiento = 2,
                            Costo = 75.00m,
                            Detalles = "Revisión de frenos",
                            Fecha = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tipo = "mecánico",
                            Vehiculo_id = 2
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.RegistroEstadoVehiculo", b =>
                {
                    b.Property<int>("Id_RegistroEstadoVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_RegistroEstadoVehiculo"));

                    b.Property<bool>("AplicanCargos")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DetallesRetorno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_ContratoRenta")
                        .HasColumnType("int");

                    b.Property<int>("KilometrajeFinal")
                        .HasColumnType("int");

                    b.Property<int>("KilometrajeInicial")
                        .HasColumnType("int");

                    b.HasKey("Id_RegistroEstadoVehiculo");

                    b.HasIndex("Id_ContratoRenta");

                    b.ToTable("RegistroEstadoVehiculo");

                    b.HasData(
                        new
                        {
                            Id_RegistroEstadoVehiculo = 1,
                            AplicanCargos = false,
                            DetallesRetorno = "Todo en orden",
                            Id_ContratoRenta = 1,
                            KilometrajeFinal = 10500,
                            KilometrajeInicial = 10000
                        },
                        new
                        {
                            Id_RegistroEstadoVehiculo = 2,
                            AplicanCargos = true,
                            DetallesRetorno = "Kilometraje menor al esperado",
                            Id_ContratoRenta = 2,
                            KilometrajeFinal = 19800,
                            KilometrajeInicial = 20000
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Rol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Rol");

                    b.ToTable("Roles_Usuario");

                    b.HasData(
                        new
                        {
                            Id_Rol = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id_Rol = 2,
                            Nombre = "Socio"
                        },
                        new
                        {
                            Id_Rol = 3,
                            Nombre = "Cliente"
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Seguro", b =>
                {
                    b.Property<int>("Id_Seguro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Seguro"));

                    b.Property<string>("AutorContratado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TipoSeguro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Seguro");

                    b.ToTable("Seguros");

                    b.HasData(
                        new
                        {
                            Id_Seguro = 1,
                            AutorContratado = "Autor 1",
                            FechaInicio = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaVencimiento = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = 50.00m,
                            TipoSeguro = "Seguro Básico"
                        },
                        new
                        {
                            Id_Seguro = 2,
                            AutorContratado = "Autor 2",
                            FechaInicio = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaVencimiento = new DateTime(2025, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = 100.00m,
                            TipoSeguro = "Seguro Completo"
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Roles_Usuarios_id")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Usuario");

                    b.HasIndex("Roles_Usuarios_id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id_Usuario = 1,
                            Contrasenia = "$2a$11$XYUho6pOYcNENkWQvKZ59e9iQG2LSjGUxUJZ5PKGkRwAxr8ZL1QDy",
                            Correo = "admin@carmanage.com",
                            FechaRegistro = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Admin Principal",
                            Roles_Usuarios_id = 1,
                            Telefono = "5551234567"
                        },
                        new
                        {
                            Id_Usuario = 2,
                            Contrasenia = "$2a$11$5aFkFhJkOqgCdeu9k1qMEeSnqz/pDe3PRLGzB3bl2GK9/HcZjCZ9e",
                            Correo = "usuario@carmanage.com",
                            FechaRegistro = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Usuario General",
                            Roles_Usuarios_id = 2,
                            Telefono = "5559876543"
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id_Vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Vehiculo"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int?>("Categoria_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoTemporadaAlta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CostoTemporadaBaja")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAutomatico")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMantenimiento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRentado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Usuarios_id")
                        .HasColumnType("int");

                    b.HasKey("Id_Vehiculo");

                    b.HasIndex("Categoria_Id");

                    b.HasIndex("Usuarios_id");

                    b.ToTable("Vehiculos");

                    b.HasData(
                        new
                        {
                            Id_Vehiculo = 1,
                            Anio = 2020,
                            Categoria_Id = 1,
                            CostoTemporadaAlta = 1500.00m,
                            CostoTemporadaBaja = 1000.00m,
                            Descripcion = "SUV familiar",
                            FechaRegistro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAutomatico = true,
                            IsMantenimiento = false,
                            IsRentado = false,
                            Kilometraje = 10000,
                            Marca = "Toyota",
                            Modelo = "RAV4",
                            Placa = "ABC123",
                            Usuarios_id = 1
                        },
                        new
                        {
                            Id_Vehiculo = 2,
                            Anio = 2019,
                            Categoria_Id = 2,
                            CostoTemporadaAlta = 1200.00m,
                            CostoTemporadaBaja = 900.00m,
                            Descripcion = "Sedán compacto",
                            FechaRegistro = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAutomatico = false,
                            IsMantenimiento = false,
                            IsRentado = false,
                            Kilometraje = 20000,
                            Marca = "Honda",
                            Modelo = "Civic",
                            Placa = "XYZ456",
                            Usuarios_id = 2
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.VehiculoSeguro", b =>
                {
                    b.Property<int>("Id_VehiculoSeguro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_VehiculoSeguro"));

                    b.Property<int>("Seguros_id")
                        .HasColumnType("int");

                    b.Property<int>("Vehiculos_id")
                        .HasColumnType("int");

                    b.HasKey("Id_VehiculoSeguro");

                    b.HasIndex("Seguros_id");

                    b.HasIndex("Vehiculos_id");

                    b.ToTable("Vehiculos_Seguros");

                    b.HasData(
                        new
                        {
                            Id_VehiculoSeguro = 1,
                            Seguros_id = 1,
                            Vehiculos_id = 1
                        },
                        new
                        {
                            Id_VehiculoSeguro = 2,
                            Seguros_id = 2,
                            Vehiculos_id = 2
                        });
                });

            modelBuilder.Entity("BackCar._Domain.Entities.ContratoRenta", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Clientes_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackCar._Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Vehiculos_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Incidente", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.ContratoRenta", "ContratoRenta")
                        .WithMany()
                        .HasForeignKey("Id_ContratoRenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackCar._Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Id_Vehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoRenta");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Mantenimiento", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Vehiculo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.RegistroEstadoVehiculo", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.ContratoRenta", "ContratoRenta")
                        .WithMany()
                        .HasForeignKey("Id_ContratoRenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoRenta");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Usuario", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("Roles_Usuarios_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.Vehiculo", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("Categoria_Id");

                    b.HasOne("BackCar._Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usuarios_id");

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BackCar._Domain.Entities.VehiculoSeguro", b =>
                {
                    b.HasOne("BackCar._Domain.Entities.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("Seguros_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackCar._Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Vehiculos_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seguro");

                    b.Navigation("Vehiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
